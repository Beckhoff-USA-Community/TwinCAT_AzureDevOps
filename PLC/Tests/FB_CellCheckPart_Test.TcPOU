<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CellCheckPart_Test" Id="{5d8408a8-2a16-4833-8353-0d244cf7fe20}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CellCheckPart_Test EXTENDS TcUnit.FB_TestSuite
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CheckPartGood();
CheckPartBadBarcode();]]></ST>
    </Implementation>
    <Method Name="CheckPartBadBarcode" Id="{00ac122f-4718-41a9-beea-3eb9fb4aba3b}">
      <Declaration><![CDATA[METHOD PRIVATE CheckPartBadBarcode
VAR
	fbCell		: FB_Cell;
	MockStatus	: ST_PartStatus;
	Expected	: BOOL := FALSE;
	Result		: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('CheckPartBarcodeFail');

MockStatus.bBarcodeStatus := FALSE;
MockStatus.bCapperStatus := TRUE;
MockStatus.bFillerStatus := TRUE;
MockStatus.bWeightStatus := TRUE;

Result := fbCell.CheckPart(MockStatus);

AssertEquals(Expected := Expected,
             Actual := Result,
             Message := 'part check mismatch');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="CheckPartCapperFail" Id="{86d2fe06-ceb9-4f49-9dbe-a9a80b64e6ba}">
      <Declaration><![CDATA[METHOD PRIVATE CheckPartCapperFail
VAR
	fbCell		: FB_Cell;
	MockStatus	: ST_PartStatus;
	Expected	: BOOL := FALSE;
	Result		: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('CheckPartCapperFail');

MockStatus.bBarcodeStatus := TRUE;
MockStatus.bCapperStatus := FALSE;
MockStatus.bFillerStatus := TRUE;
MockStatus.bWeightStatus := TRUE;

Result := fbCell.CheckPart(MockStatus);

AssertEquals(Expected := Expected,
             Actual := Result,
             Message := 'part check mismatch');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <Method Name="CheckPartGood" Id="{4589c4d3-6f4d-4ca9-850a-ce7aa2ca1fe6}">
      <Declaration><![CDATA[METHOD PRIVATE CheckPartGood
VAR
	fbCell		: FB_Cell;
	MockStatus	: ST_PartStatus;
	Expected	: BOOL := TRUE;
	Result		: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TEST('CheckPartGood');

MockStatus.bBarcodeStatus := TRUE;
MockStatus.bCapperStatus := TRUE;
MockStatus.bFillerStatus := TRUE;
MockStatus.bWeightStatus := TRUE;

Result := fbCell.CheckPart(MockStatus);

AssertEquals(Expected := Expected,
             Actual := Result,
             Message := 'part check mismatch');

TEST_FINISHED();]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CellCheckPart_Test">
      <LineId Id="9" Count="1" />
    </LineIds>
    <LineIds Name="FB_CellCheckPart_Test.CheckPartBadBarcode">
      <LineId Id="21" Count="1" />
      <LineId Id="10" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CellCheckPart_Test.CheckPartCapperFail">
      <LineId Id="21" Count="1" />
      <LineId Id="10" Count="10" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CellCheckPart_Test.CheckPartGood">
      <LineId Id="28" Count="1" />
      <LineId Id="5" Count="0" />
      <LineId Id="10" Count="2" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="4" />
      <LineId Id="15" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>